<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelRelationshipPerfOptions.true...ObjectModelRelationshipPerfOptions />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.13a3es31phg6ju1cse77h09tenyw'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='customers' table='[customers]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='date' table='[date]' type='table' />
          <relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='products' table='[products]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[profit_margin_percentage]' value='[transactions].[profit_margin_percentage]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_915AD97FC0EA4BCAA043620554F09B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_915AD97FC0EA4BCAA043620554F09B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_915AD97FC0EA4BCAA043620554F09B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_915AD97FC0EA4BCAA043620554F09B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_915AD97FC0EA4BCAA043620554F09B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_915AD97FC0EA4BCAA043620554F09B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_915AD97FC0EA4BCAA043620554F09B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin_percentage]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin_percentage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_915AD97FC0EA4BCAA043620554F09B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_915AD97FC0EA4BCAA043620554F09B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[transactions_915AD97FC0EA4BCAA043620554F09B1A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_2BD737C152DD4B468FCA550856C1858B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_2BD737C152DD4B468FCA550856C1858B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[customers_2BD737C152DD4B468FCA550856C1858B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_142DA84CB8E042A2B8CD969121C974EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_142DA84CB8E042A2B8CD969121C974EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_142DA84CB8E042A2B8CD969121C974EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_142DA84CB8E042A2B8CD969121C974EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[date_142DA84CB8E042A2B8CD969121C974EC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_96C33C17D145435DA07EBEA4165BD090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_96C33C17D145435DA07EBEA4165BD090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[markets_96C33C17D145435DA07EBEA4165BD090]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products_94DBF1EF56724D3389607E48A12C13BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[products_94DBF1EF56724D3389607E48A12C13BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Revenue' datatype='real' name='[Calculation_1250030372858150912]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*80 ELSE [sales_amount] END' />
      </column>
      <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot; &quot;' />
      </column>
      <column caption='Profit-margin%' datatype='real' name='[Calculation_409264621073297408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([profit_margin])/SUM([Calculation_1250030372858150912])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_2BD737C152DD4B468FCA550856C1858B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_142DA84CB8E042A2B8CD969121C974EC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_96C33C17D145435DA07EBEA4165BD090]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_94DBF1EF56724D3389607E48A12C13BB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_915AD97FC0EA4BCAA043620554F09B1A]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Profit' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
      <column caption='profit_margin' datatype='real' name='[profit_margin_percentage]' role='measure' type='quantitative' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
      <column-instance column='[product_code]' derivation='None' name='[none:product_code:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[pcdf:sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[pcto:sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Month-Trunc' name='[tmn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_409264621073297408]' derivation='User' name='[usr:Calculation_409264621073297408:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Blank,MONTH(Cy Date))' hidden='true' name='[Action (Blank,MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Blank,YEAR(Cy Date))' hidden='true' name='[Action (Blank,YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Custmer Name)' hidden='true' name='[Action (Custmer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[custmer_name]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Cy Date)) 1' hidden='true' name='[Action (MONTH(Cy Date)) 1]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Cy Date))' hidden='true' name='[Action (MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Markets Name)' hidden='true' name='[Action (Markets Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[markets_name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:product_code:nk]' palette='winter_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Prod009&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod029&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod049&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod069&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod089&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod109&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod129&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod149&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod169&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod189&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod209&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod229&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod249&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod269&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod289&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod310&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Prod330&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod041&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod061&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod081&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod101&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod121&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod141&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod161&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod181&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod201&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod221&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod241&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod261&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod281&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod302&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Prod322&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod005&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod025&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod045&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod065&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod085&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod105&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod125&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod145&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod165&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod185&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod205&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod225&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod245&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod265&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod285&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod306&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prod326&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod013&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod033&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod053&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod073&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod093&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod113&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod133&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod153&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod173&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod193&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod213&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod233&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod253&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod273&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod293&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Prod314&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod010&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod030&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod050&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod070&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod090&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod110&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod130&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod150&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod170&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod190&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod210&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod230&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod250&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod270&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod290&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod311&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prod331&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod006&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod026&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod046&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod066&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod086&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod106&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod126&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod146&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod166&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod186&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod206&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod226&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod246&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod266&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod286&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod307&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prod327&quot;</bucket>
            </map>
            <map to='#90728f'>
              <bucket>&quot;Prod316&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod019&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod039&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod059&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod079&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod099&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod119&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod139&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod159&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod179&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod199&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod219&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod239&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod259&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod279&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod300&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Prod320&quot;</bucket>
            </map>
            <map to='#9d9b3d'>
              <bucket>&quot;Prod324&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod022&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod042&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod062&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod082&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod102&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod122&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod142&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod162&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod182&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod202&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod222&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod242&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod262&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod282&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod303&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Prod323&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod017&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod037&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod057&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod077&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod097&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod117&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod137&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod157&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod177&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod197&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod217&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod237&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod257&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod277&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod297&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Prod338&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod007&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod027&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod047&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod067&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod087&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod107&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod127&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod147&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod167&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod187&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod207&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod227&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod247&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod267&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod287&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod308&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prod328&quot;</bucket>
            </map>
            <map to='#b9a0b4'>
              <bucket>&quot;Prod318&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod014&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod034&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod054&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod074&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod094&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod114&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod134&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod154&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod174&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod194&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod214&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod234&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod254&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod274&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod294&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod315&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prod335&quot;</bucket>
            </map>
            <map to='#cecb76'>
              <bucket>&quot;Prod329&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod015&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod035&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod055&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod075&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod095&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod115&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod135&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod155&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod175&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod195&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod215&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod235&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod255&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod275&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod295&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prod336&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod018&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod038&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod058&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod078&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod098&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod118&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod138&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod158&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod178&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod198&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod218&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod238&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod258&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod278&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod298&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod319&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Prod339&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod040&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod060&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod080&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod100&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod120&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod140&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod160&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod180&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod200&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod220&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod240&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod260&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod280&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod301&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Prod321&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod011&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod031&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod051&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod071&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod091&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod111&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod131&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod151&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod171&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod191&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod211&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod231&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod251&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod271&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod291&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod312&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod332&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Prod334&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod008&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod028&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod048&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod068&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod088&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod108&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod128&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod148&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod168&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod188&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod208&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod228&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod248&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod268&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod288&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Prod309&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod023&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod043&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod063&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod083&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod103&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod123&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod143&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod163&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod183&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod203&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod223&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod243&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod263&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod283&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Prod304&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod016&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod036&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod056&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod076&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod096&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod116&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod136&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod156&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod176&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod196&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod216&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod236&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod256&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod276&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod296&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod317&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prod337&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod012&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod032&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod052&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod072&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod092&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod112&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod132&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod152&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod172&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod192&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod212&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod232&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod252&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod272&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod292&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod313&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Prod333&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod004&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod024&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod044&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod064&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod084&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod104&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod124&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod144&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod164&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod184&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod204&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod224&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod244&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod264&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod284&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod305&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prod325&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#053661'>
              <bucket>&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[pcdf:sum:Calculation_1250030372858150912:qk]&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[pcto:sum:Calculation_1250030372858150912:qk]&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:customer_type:nk]' type='palette'>
            <map to='#8fb202'>
              <bucket>&quot;E-Commerce&quot;</bucket>
            </map>
            <map to='#cf3e53'>
              <bucket>&quot;Brick &amp; Mortar&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_1250030372858150912' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[markets_code]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[markets_code]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[markets_code]' member='&quot;Mark097&quot;' />
            <groupfilter function='member' level='[markets_code]' member='&quot;Mark999&quot;' />
            <groupfilter function='member' level='[markets_code]' member='%null%' />
          </groupfilter>
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
        <max>1510944.0</max>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='customers' id='customers_2BD737C152DD4B468FCA550856C1858B'>
            <properties context=''>
              <relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_142DA84CB8E042A2B8CD969121C974EC'>
            <properties context=''>
              <relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_96C33C17D145435DA07EBEA4165BD090'>
            <properties context=''>
              <relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_94DBF1EF56724D3389607E48A12C13BB'>
            <properties context=''>
              <relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_915AD97FC0EA4BCAA043620554F09B1A'>
            <properties context=''>
              <relation connection='mysql.13a3es31phg6ju1cse77h09tenyw' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_915AD97FC0EA4BCAA043620554F09B1A' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='customers_2BD737C152DD4B468FCA550856C1858B' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_915AD97FC0EA4BCAA043620554F09B1A' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='date_142DA84CB8E042A2B8CD969121C974EC' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_915AD97FC0EA4BCAA043620554F09B1A' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='markets_96C33C17D145435DA07EBEA4165BD090' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_915AD97FC0EA4BCAA043620554F09B1A' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='products_94DBF1EF56724D3389607E48A12C13BB' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10_D782128105364D9682623E0E21C93646]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit-Analysis' type='sheet' worksheet='Revenue By Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit-Analysis' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action11_0EB6A1AFF13B4F66A05C09A0AF462CA3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit-Analysis' type='sheet' worksheet='Profit Margin By Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit-Analysis' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action12_3E7EBD40FAB14FE19594F747C9A609E8]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit-Analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit-Analysis' />
      </command>
    </action>
    <action caption='Filter 13 (generated)' name='[Action13_58439BC1603D4742AF2DA3CD263D6D81]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit-Analysis' type='sheet' worksheet='Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit-Analysis' />
      </command>
    </action>
    <action caption='Filter 14 (generated)' name='[Action14_999117A883A949B6B43DBA1AF6ABB82C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit-Analysis' type='sheet' worksheet='Profit-Trend' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit-Analysis' />
      </command>
    </action>
    <action caption='Filter 15 (generated)' name='[Action15_73130876AAB448E6992C900D93D3F573]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit-Analysis' type='sheet' worksheet='Customer Table' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit-Analysis' />
      </command>
    </action>
    <action caption='Filter 16 (generated)' name='[Action16_48D233A84D17484DBD7FCEDE95A303A2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit-Analysis' type='sheet' worksheet='Profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit-Analysis' />
      </command>
    </action>
    <action caption='Filter 17 (generated)' name='[Action17_427B8EFDDE3E4BDCBD21638930F0A472]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Profit-Analysis' type='sheet' worksheet='pie chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Profit-Analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_45A73EBD6DB0478D9D83470D79FB25FB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue-Analysis' type='sheet' worksheet='Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue-Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_27CB37AF13B14B7494272ECF0894A57A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue-Analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue-Analysis' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_9165E21B000D42C1BCEA421E5B75B21E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue-Analysis' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue-Analysis' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_EF13DB7B476A44B8826367C1803E41CB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue-Analysis' type='sheet' worksheet='Sales' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue-Analysis' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_13576E434F364CE39D11DE018CAAE6B1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue-Analysis' type='sheet' worksheet='Sales Quantity By Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue-Analysis' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_D1C6A2DFE2514BE3B32A6F4749782256]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue-Analysis' type='sheet' worksheet='Revenue By Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue-Analysis' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_E4854133E9B44C1E8C0EC39271A7E0E2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue-Analysis' type='sheet' worksheet='Revenue By Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue-Analysis' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_AB5629D95ACB4A7EB154193E84EC0512]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue-Analysis' type='sheet' worksheet='Top 5 Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue-Analysis' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_7C99257724EB441BAFFE498B42D508DF]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Revenue-Analysis' type='sheet' worksheet='Top 5 Customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Revenue-Analysis' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer Table'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Revenue' datatype='real' name='[Calculation_1250030372858150912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*80 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Profit-margin%' datatype='real' name='[Calculation_409264621073297408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/SUM([Calculation_1250030372858150912])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Profit' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_409264621073297408]' derivation='User' name='[usr:Calculation_409264621073297408:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:profit_margin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]&quot;</bucket>
              <bucket>&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:profit_margin:qk]&quot;</bucket>
              <bucket>&quot;[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action13_58439BC1603D4742AF2DA3CD263D6D81]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action11_0EB6A1AFF13B4F66A05C09A0AF462CA3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]' value='115' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='text-align' data-class='subtotal' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]' value='auto' />
            <format attr='width' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]' value='164' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]</rows>
        <cols>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6B1C1ADD-2000-4E1C-BCC4-8F35AD025E64}' />
    </worksheet>
    <worksheet name='Months'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1250030372935704577]' derivation='None' name='[none:Calculation_1250030372935704577:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_27CB37AF13B14B7494272ECF0894A57A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_73130876AAB448E6992C900D93D3F573]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_13576E434F364CE39D11DE018CAAE6B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok]' value='iLLL' />
            <format attr='text-decoration' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok]' value='none' />
            <format attr='font-style' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok]' value='normal' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok]' value='normal' />
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok]' value='11' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok]' value='#333333' />
            <format attr='text-align' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok]' value='center' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:Calculation_1250030372935704577:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:Calculation_1250030372935704577:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{165F71F4-650B-4A3C-B05E-1C088E406199}' />
    </worksheet>
    <worksheet name='Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Profit' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action13_58439BC1603D4742AF2DA3CD263D6D81]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action11_0EB6A1AFF13B4F66A05C09A0AF462CA3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:profit_margin:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:profit_margin:qk]' value='9' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:profit_margin:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#59a14f' fontsize='18'>Profit</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#59a14f' fontsize='18'><![CDATA[<[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:profit_margin:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{80B9857B-5A37-4C25-9C2B-E5575246BF32}' />
    </worksheet>
    <worksheet name='Profit Margin By Markets'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'> &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Revenue' datatype='real' name='[Calculation_1250030372858150912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*80 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Profit-margin%' datatype='real' name='[Calculation_409264621073297408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/SUM([Calculation_1250030372858150912])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Profit' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_409264621073297408]' derivation='User' name='[usr:Calculation_409264621073297408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action13_58439BC1603D4742AF2DA3CD263D6D81]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_3E7EBD40FAB14FE19594F747C9A609E8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_73130876AAB448E6992C900D93D3F573]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Surat&quot;</bucket>
              <bucket>&quot;Patna&quot;</bucket>
              <bucket>&quot;Bhubaneshwar&quot;</bucket>
              <bucket>&quot;Bhopal&quot;</bucket>
              <bucket>&quot;Kochi&quot;</bucket>
              <bucket>&quot;Mumbai&quot;</bucket>
              <bucket>&quot;Nagpur&quot;</bucket>
              <bucket>&quot;Delhi NCR&quot;</bucket>
              <bucket>&quot;Ahmedabad&quot;</bucket>
              <bucket>&quot;Chennai&quot;</bucket>
              <bucket>&quot;Lucknow&quot;</bucket>
              <bucket>&quot;Hyderabad&quot;</bucket>
              <bucket>&quot;Kanpur&quot;</bucket>
              <bucket>&quot;Bengaluru&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]' value='49' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]' value='p0.00%' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]' value='bold' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]' value='#1b1b1b' />
            <format attr='height' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='36' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='9' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='bold' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='#555555' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#555555' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#9d7660' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]</rows>
        <cols>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]</cols>
      </table>
      <simple-id uuid='{9CBF3AA0-22C0-49D6-8168-7163D59FD418}' />
    </worksheet>
    <worksheet name='Profit-Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Revenue' datatype='real' name='[Calculation_1250030372858150912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*80 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Profit-margin%' datatype='real' name='[Calculation_409264621073297408]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([profit_margin])/SUM([Calculation_1250030372858150912])' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Profit' datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Month-Trunc' name='[tmn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_409264621073297408]' derivation='User' name='[usr:Calculation_409264621073297408:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action13_58439BC1603D4742AF2DA3CD263D6D81]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action12_3E7EBD40FAB14FE19594F747C9A609E8]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_73130876AAB448E6992C900D93D3F573]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action11_0EB6A1AFF13B4F66A05C09A0AF462CA3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='76' />
            <format attr='width' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]' value='76' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[tmn:cy_date:ok]' value='69' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='n#,##0,,.0M;-#,##0,,.0M' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]' value='p0.0%' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[tmn:cy_date:ok]' value='*mmm,yy' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#1b1b1b' />
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]' />
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]' />
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk] + [federated.1271acg07aiyzl13nj4sx0zxk5t2].[usr:Calculation_409264621073297408:qk])</rows>
        <cols>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[tmn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{5B1D8688-5005-4F8D-ACA1-D5A5C383DED8}' />
    </worksheet>
    <worksheet name='Revenue'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Revenue' datatype='real' name='[Calculation_1250030372858150912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*80 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_45A73EBD6DB0478D9D83470D79FB25FB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_27CB37AF13B14B7494272ECF0894A57A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_73130876AAB448E6992C900D93D3F573]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_13576E434F364CE39D11DE018CAAE6B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='center' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='color' value='#483838' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='18'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run bold='true' fontsize='18'><![CDATA[<[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0E05FE21-AB60-4FAE-ACF1-0E51DF3DB356}' />
    </worksheet>
    <worksheet name='Revenue By Market'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'> &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Revenue' datatype='real' name='[Calculation_1250030372858150912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*80 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_45A73EBD6DB0478D9D83470D79FB25FB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_27CB37AF13B14B7494272ECF0894A57A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_73130876AAB448E6992C900D93D3F573]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_13576E434F364CE39D11DE018CAAE6B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='37' />
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='bold' />
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='112' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='9' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='bold' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='#555555' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#1b1b1b' />
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>&lt;</run>
                <run fontsize='10'>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]</run>
                <run fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.626187801361084' />
                <format attr='mark-color' value='#e16262' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='301' />
                <format attr='maxwidth' value='301' />
                <format attr='minheight' value='518' />
                <format attr='maxheight' value='518' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]</rows>
        <cols>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]</cols>
      </table>
      <simple-id uuid='{323C9240-1A05-4059-B09A-CE093FA505DF}' />
    </worksheet>
    <worksheet name='Revenue By Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#90b77d' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Revenue' datatype='real' name='[Calculation_1250030372858150912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*80 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Quarter' name='[qr:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_45A73EBD6DB0478D9D83470D79FB25FB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_27CB37AF13B14B7494272ECF0894A57A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_13576E434F364CE39D11DE018CAAE6B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='#000000' />
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='9' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok]' value='iLLL' />
            <format attr='text-align' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok]' value='auto' />
            <format attr='text-orientation' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[qr:cy_date:ok]' value='0' />
            <format attr='text-align' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[qr:cy_date:ok]' value='auto' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' />
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='9'>&lt;</run>
                <run fontsize='9'>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]</run>
                <run fontsize='9'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]</rows>
        <cols>([federated.1271acg07aiyzl13nj4sx0zxk5t2].[yr:cy_date:ok] / [federated.1271acg07aiyzl13nj4sx0zxk5t2].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{DE3CBB51-AB4E-4E3F-83BF-E0F07B9EF300}' />
    </worksheet>
    <worksheet name='Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_45A73EBD6DB0478D9D83470D79FB25FB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_27CB37AF13B14B7494272ECF0894A57A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_13576E434F364CE39D11DE018CAAE6B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]' value='center' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontcolor='#483838' fontsize='18'>Total Sales</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#483838' fontsize='18'><![CDATA[<[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AA8824AA-8A88-4AF9-83E6-29B3CDE74568}' />
    </worksheet>
    <worksheet name='Sales Quantity By Market'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Æ  </run>
            <run bold='true' fontcolor='#ac4425'>Æ    </run>
            <run bold='true' fontcolor='#ac4425' fontsize='12'>Æ          </run>
            <run bold='true' fontcolor='#000000' fontsize='12'>        &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_45A73EBD6DB0478D9D83470D79FB25FB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_27CB37AF13B14B7494272ECF0894A57A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[yr:cy_date:ok]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,YEAR(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='36' />
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]' value='bold' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]' value='#000000' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]' value='n#,##0,.00K;-#,##0,.00K' />
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='112' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='9' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='bold' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]' value='#555555' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#1b1b1b' />
            <format attr='font-size' value='9' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>&lt;</run>
                <run fontsize='10'>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]</run>
                <run fontsize='10'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.5712155103683472' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#003865' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='316' />
                <format attr='maxwidth' value='316' />
                <format attr='minheight' value='420' />
                <format attr='maxheight' value='420' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]</rows>
        <cols>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{B537CA0E-F7B2-4CE4-B1D5-BA8180D96EC4}' />
    </worksheet>
    <worksheet name='Top 5 Customers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Revenue' datatype='real' name='[Calculation_1250030372858150912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*80 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_13576E434F364CE39D11DE018CAAE6B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1250030372858150912])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:custmer_name:nk]' />
                  <groupfilter function='member' level='[none:custmer_name:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Electricalsara Stores&quot;</bucket>
              <bucket>&quot;Electricalslytical&quot;</bucket>
              <bucket>&quot;Excel Stores&quot;</bucket>
              <bucket>&quot;Premium Stores&quot;</bucket>
              <bucket>&quot;Nixon&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]' value='45' />
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='c&quot;₹ &quot;#,##0,,.00M;&quot;₹ &quot;-#,##0,,.00M' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='bold' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]' value='176' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]' value='10' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]' value='bold' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]' value='#555555' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#3a9679' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]</rows>
        <cols>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]</cols>
      </table>
      <simple-id uuid='{08CD2BCA-20CC-4220-B4D9-01072A7079EE}' />
    </worksheet>
    <worksheet name='Top 5 Products'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Revenue' datatype='real' name='[Calculation_1250030372858150912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*80 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[product_code]' derivation='None' name='[none:product_code:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_13576E434F364CE39D11DE018CAAE6B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:product_code:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1250030372858150912])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:product_code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:product_code:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Prod318&quot;</bucket>
              <bucket>&quot;Prod316&quot;</bucket>
              <bucket>&quot;Prod324&quot;</bucket>
              <bucket>&quot;Prod329&quot;</bucket>
              <bucket>&quot;Prod334&quot;</bucket>
              <bucket>&quot;Prod332&quot;</bucket>
              <bucket>&quot;Prod040&quot;</bucket>
              <bucket>&quot;Prod319&quot;</bucket>
              <bucket>&quot;Prod304&quot;</bucket>
              <bucket>&quot;Prod159&quot;</bucket>
              <bucket>&quot;Prod339&quot;</bucket>
              <bucket>&quot;Prod310&quot;</bucket>
              <bucket>&quot;Prod065&quot;</bucket>
              <bucket>&quot;Prod326&quot;</bucket>
              <bucket>&quot;Prod018&quot;</bucket>
              <bucket>&quot;Prod053&quot;</bucket>
              <bucket>&quot;Prod306&quot;</bucket>
              <bucket>&quot;Prod090&quot;</bucket>
              <bucket>&quot;Prod060&quot;</bucket>
              <bucket>&quot;Prod328&quot;</bucket>
              <bucket>&quot;Prod102&quot;</bucket>
              <bucket>&quot;Prod327&quot;</bucket>
              <bucket>&quot;Prod239&quot;</bucket>
              <bucket>&quot;Prod049&quot;</bucket>
              <bucket>&quot;Prod129&quot;</bucket>
              <bucket>&quot;Prod099&quot;</bucket>
              <bucket>&quot;Prod024&quot;</bucket>
              <bucket>&quot;Prod245&quot;</bucket>
              <bucket>&quot;Prod320&quot;</bucket>
              <bucket>&quot;Prod117&quot;</bucket>
              <bucket>&quot;Prod308&quot;</bucket>
              <bucket>&quot;Prod252&quot;</bucket>
              <bucket>&quot;Prod209&quot;</bucket>
              <bucket>&quot;Prod131&quot;</bucket>
              <bucket>&quot;Prod337&quot;</bucket>
              <bucket>&quot;Prod166&quot;</bucket>
              <bucket>&quot;Prod057&quot;</bucket>
              <bucket>&quot;Prod237&quot;</bucket>
              <bucket>&quot;Prod313&quot;</bucket>
              <bucket>&quot;Prod113&quot;</bucket>
              <bucket>&quot;Prod212&quot;</bucket>
              <bucket>&quot;Prod061&quot;</bucket>
              <bucket>&quot;Prod047&quot;</bucket>
              <bucket>&quot;Prod106&quot;</bucket>
              <bucket>&quot;Prod123&quot;</bucket>
              <bucket>&quot;Prod167&quot;</bucket>
              <bucket>&quot;Prod215&quot;</bucket>
              <bucket>&quot;Prod133&quot;</bucket>
              <bucket>&quot;Prod307&quot;</bucket>
              <bucket>&quot;Prod210&quot;</bucket>
              <bucket>&quot;Prod214&quot;</bucket>
              <bucket>&quot;Prod206&quot;</bucket>
              <bucket>&quot;Prod044&quot;</bucket>
              <bucket>&quot;Prod046&quot;</bucket>
              <bucket>&quot;Prod052&quot;</bucket>
              <bucket>&quot;Prod243&quot;</bucket>
              <bucket>&quot;Prod236&quot;</bucket>
              <bucket>&quot;Prod105&quot;</bucket>
              <bucket>&quot;Prod261&quot;</bucket>
              <bucket>&quot;Prod232&quot;</bucket>
              <bucket>&quot;Prod216&quot;</bucket>
              <bucket>&quot;Prod054&quot;</bucket>
              <bucket>&quot;Prod121&quot;</bucket>
              <bucket>&quot;Prod336&quot;</bucket>
              <bucket>&quot;Prod071&quot;</bucket>
              <bucket>&quot;Prod267&quot;</bucket>
              <bucket>&quot;Prod260&quot;</bucket>
              <bucket>&quot;Prod058&quot;</bucket>
              <bucket>&quot;Prod077&quot;</bucket>
              <bucket>&quot;Prod220&quot;</bucket>
              <bucket>&quot;Prod221&quot;</bucket>
              <bucket>&quot;Prod290&quot;</bucket>
              <bucket>&quot;Prod312&quot;</bucket>
              <bucket>&quot;Prod246&quot;</bucket>
              <bucket>&quot;Prod271&quot;</bucket>
              <bucket>&quot;Prod165&quot;</bucket>
              <bucket>&quot;Prod043&quot;</bucket>
              <bucket>&quot;Prod292&quot;</bucket>
              <bucket>&quot;Prod056&quot;</bucket>
              <bucket>&quot;Prod070&quot;</bucket>
              <bucket>&quot;Prod116&quot;</bucket>
              <bucket>&quot;Prod093&quot;</bucket>
              <bucket>&quot;Prod213&quot;</bucket>
              <bucket>&quot;Prod160&quot;</bucket>
              <bucket>&quot;Prod244&quot;</bucket>
              <bucket>&quot;Prod298&quot;</bucket>
              <bucket>&quot;Prod025&quot;</bucket>
              <bucket>&quot;Prod251&quot;</bucket>
              <bucket>&quot;Prod241&quot;</bucket>
              <bucket>&quot;Prod016&quot;</bucket>
              <bucket>&quot;Prod134&quot;</bucket>
              <bucket>&quot;Prod229&quot;</bucket>
              <bucket>&quot;Prod254&quot;</bucket>
              <bucket>&quot;Prod322&quot;</bucket>
              <bucket>&quot;Prod150&quot;</bucket>
              <bucket>&quot;Prod297&quot;</bucket>
              <bucket>&quot;Prod110&quot;</bucket>
              <bucket>&quot;Prod145&quot;</bucket>
              <bucket>&quot;Prod227&quot;</bucket>
              <bucket>&quot;Prod126&quot;</bucket>
              <bucket>&quot;Prod146&quot;</bucket>
              <bucket>&quot;Prod098&quot;</bucket>
              <bucket>&quot;Prod124&quot;</bucket>
              <bucket>&quot;Prod051&quot;</bucket>
              <bucket>&quot;Prod338&quot;</bucket>
              <bucket>&quot;Prod169&quot;</bucket>
              <bucket>&quot;Prod120&quot;</bucket>
              <bucket>&quot;Prod073&quot;</bucket>
              <bucket>&quot;Prod062&quot;</bucket>
              <bucket>&quot;Prod288&quot;</bucket>
              <bucket>&quot;Prod114&quot;</bucket>
              <bucket>&quot;Prod233&quot;</bucket>
              <bucket>&quot;Prod187&quot;</bucket>
              <bucket>&quot;Prod333&quot;</bucket>
              <bucket>&quot;Prod325&quot;</bucket>
              <bucket>&quot;Prod296&quot;</bucket>
              <bucket>&quot;Prod042&quot;</bucket>
              <bucket>&quot;Prod286&quot;</bucket>
              <bucket>&quot;Prod005&quot;</bucket>
              <bucket>&quot;Prod101&quot;</bucket>
              <bucket>&quot;Prod321&quot;</bucket>
              <bucket>&quot;Prod162&quot;</bucket>
              <bucket>&quot;Prod122&quot;</bucket>
              <bucket>&quot;Prod204&quot;</bucket>
              <bucket>&quot;Prod317&quot;</bucket>
              <bucket>&quot;Prod323&quot;</bucket>
              <bucket>&quot;Prod255&quot;</bucket>
              <bucket>&quot;Prod225&quot;</bucket>
              <bucket>&quot;Prod045&quot;</bucket>
              <bucket>&quot;Prod294&quot;</bucket>
              <bucket>&quot;Prod161&quot;</bucket>
              <bucket>&quot;Prod084&quot;</bucket>
              <bucket>&quot;Prod030&quot;</bucket>
              <bucket>&quot;Prod091&quot;</bucket>
              <bucket>&quot;Prod234&quot;</bucket>
              <bucket>&quot;Prod089&quot;</bucket>
              <bucket>&quot;Prod135&quot;</bucket>
              <bucket>&quot;Prod170&quot;</bucket>
              <bucket>&quot;Prod238&quot;</bucket>
              <bucket>&quot;Prod309&quot;</bucket>
              <bucket>&quot;Prod132&quot;</bucket>
              <bucket>&quot;Prod103&quot;</bucket>
              <bucket>&quot;Prod228&quot;</bucket>
              <bucket>&quot;Prod072&quot;</bucket>
              <bucket>&quot;Prod295&quot;</bucket>
              <bucket>&quot;Prod250&quot;</bucket>
              <bucket>&quot;Prod100&quot;</bucket>
              <bucket>&quot;Prod148&quot;</bucket>
              <bucket>&quot;Prod083&quot;</bucket>
              <bucket>&quot;Prod003&quot;</bucket>
              <bucket>&quot;Prod300&quot;</bucket>
              <bucket>&quot;Prod258&quot;</bucket>
              <bucket>&quot;Prod283&quot;</bucket>
              <bucket>&quot;Prod128&quot;</bucket>
              <bucket>&quot;Prod180&quot;</bucket>
              <bucket>&quot;Prod168&quot;</bucket>
              <bucket>&quot;Prod067&quot;</bucket>
              <bucket>&quot;Prod127&quot;</bucket>
              <bucket>&quot;Prod279&quot;</bucket>
              <bucket>&quot;Prod059&quot;</bucket>
              <bucket>&quot;Prod092&quot;</bucket>
              <bucket>&quot;Prod017&quot;</bucket>
              <bucket>&quot;Prod280&quot;</bucket>
              <bucket>&quot;Prod152&quot;</bucket>
              <bucket>&quot;Prod163&quot;</bucket>
              <bucket>&quot;Prod118&quot;</bucket>
              <bucket>&quot;Prod013&quot;</bucket>
              <bucket>&quot;Prod269&quot;</bucket>
              <bucket>&quot;Prod048&quot;</bucket>
              <bucket>&quot;Prod311&quot;</bucket>
              <bucket>&quot;Prod265&quot;</bucket>
              <bucket>&quot;Prod303&quot;</bucket>
              <bucket>&quot;Prod041&quot;</bucket>
              <bucket>&quot;Prod177&quot;</bucket>
              <bucket>&quot;Prod164&quot;</bucket>
              <bucket>&quot;Prod137&quot;</bucket>
              <bucket>&quot;Prod179&quot;</bucket>
              <bucket>&quot;Prod149&quot;</bucket>
              <bucket>&quot;Prod278&quot;</bucket>
              <bucket>&quot;Prod275&quot;</bucket>
              <bucket>&quot;Prod039&quot;</bucket>
              <bucket>&quot;Prod119&quot;</bucket>
              <bucket>&quot;Prod176&quot;</bucket>
              <bucket>&quot;Prod026&quot;</bucket>
              <bucket>&quot;Prod188&quot;</bucket>
              <bucket>&quot;Prod249&quot;</bucket>
              <bucket>&quot;Prod270&quot;</bucket>
              <bucket>&quot;Prod033&quot;</bucket>
              <bucket>&quot;Prod095&quot;</bucket>
              <bucket>&quot;Prod021&quot;</bucket>
              <bucket>&quot;Prod281&quot;</bucket>
              <bucket>&quot;Prod064&quot;</bucket>
              <bucket>&quot;Prod301&quot;</bucket>
              <bucket>&quot;Prod178&quot;</bucket>
              <bucket>&quot;Prod331&quot;</bucket>
              <bucket>&quot;Prod011&quot;</bucket>
              <bucket>&quot;Prod199&quot;</bucket>
              <bucket>&quot;Prod140&quot;</bucket>
              <bucket>&quot;Prod141&quot;</bucket>
              <bucket>&quot;Prod293&quot;</bucket>
              <bucket>&quot;Prod266&quot;</bucket>
              <bucket>&quot;Prod068&quot;</bucket>
              <bucket>&quot;Prod055&quot;</bucket>
              <bucket>&quot;Prod268&quot;</bucket>
              <bucket>&quot;Prod289&quot;</bucket>
              <bucket>&quot;Prod087&quot;</bucket>
              <bucket>&quot;Prod305&quot;</bucket>
              <bucket>&quot;Prod291&quot;</bucket>
              <bucket>&quot;Prod107&quot;</bucket>
              <bucket>&quot;Prod276&quot;</bucket>
              <bucket>&quot;Prod263&quot;</bucket>
              <bucket>&quot;Prod010&quot;</bucket>
              <bucket>&quot;Prod088&quot;</bucket>
              <bucket>&quot;Prod020&quot;</bucket>
              <bucket>&quot;Prod224&quot;</bucket>
              <bucket>&quot;Prod257&quot;</bucket>
              <bucket>&quot;Prod207&quot;</bucket>
              <bucket>&quot;Prod242&quot;</bucket>
              <bucket>&quot;Prod218&quot;</bucket>
              <bucket>&quot;Prod143&quot;</bucket>
              <bucket>&quot;Prod264&quot;</bucket>
              <bucket>&quot;Prod185&quot;</bucket>
              <bucket>&quot;Prod262&quot;</bucket>
              <bucket>&quot;Prod330&quot;</bucket>
              <bucket>&quot;Prod158&quot;</bucket>
              <bucket>&quot;Prod302&quot;</bucket>
              <bucket>&quot;Prod272&quot;</bucket>
              <bucket>&quot;Prod144&quot;</bucket>
              <bucket>&quot;Prod253&quot;</bucket>
              <bucket>&quot;Prod274&quot;</bucket>
              <bucket>&quot;Prod273&quot;</bucket>
              <bucket>&quot;Prod205&quot;</bucket>
              <bucket>&quot;Prod085&quot;</bucket>
              <bucket>&quot;Prod226&quot;</bucket>
              <bucket>&quot;Prod287&quot;</bucket>
              <bucket>&quot;Prod147&quot;</bucket>
              <bucket>&quot;Prod142&quot;</bucket>
              <bucket>&quot;Prod125&quot;</bucket>
              <bucket>&quot;Prod019&quot;</bucket>
              <bucket>&quot;Prod009&quot;</bucket>
              <bucket>&quot;Prod096&quot;</bucket>
              <bucket>&quot;Prod219&quot;</bucket>
              <bucket>&quot;Prod081&quot;</bucket>
              <bucket>&quot;Prod197&quot;</bucket>
              <bucket>&quot;Prod208&quot;</bucket>
              <bucket>&quot;Prod193&quot;</bucket>
              <bucket>&quot;Prod186&quot;</bucket>
              <bucket>&quot;Prod315&quot;</bucket>
              <bucket>&quot;Prod201&quot;</bucket>
              <bucket>&quot;Prod157&quot;</bucket>
              <bucket>&quot;Prod172&quot;</bucket>
              <bucket>&quot;Prod171&quot;</bucket>
              <bucket>&quot;Prod284&quot;</bucket>
              <bucket>&quot;Prod038&quot;</bucket>
              <bucket>&quot;Prod174&quot;</bucket>
              <bucket>&quot;Prod027&quot;</bucket>
              <bucket>&quot;Prod001&quot;</bucket>
              <bucket>&quot;Prod223&quot;</bucket>
              <bucket>&quot;Prod183&quot;</bucket>
              <bucket>&quot;Prod104&quot;</bucket>
              <bucket>&quot;Prod314&quot;</bucket>
              <bucket>&quot;Prod153&quot;</bucket>
              <bucket>&quot;Prod198&quot;</bucket>
              <bucket>&quot;Prod231&quot;</bucket>
              <bucket>&quot;Prod004&quot;</bucket>
              <bucket>&quot;Prod012&quot;</bucket>
              <bucket>&quot;Prod097&quot;</bucket>
              <bucket>&quot;Prod022&quot;</bucket>
              <bucket>&quot;Prod195&quot;</bucket>
              <bucket>&quot;Prod196&quot;</bucket>
              <bucket>&quot;Prod035&quot;</bucket>
              <bucket>&quot;Prod184&quot;</bucket>
              <bucket>&quot;Prod028&quot;</bucket>
              <bucket>&quot;Prod156&quot;</bucket>
              <bucket>&quot;Prod139&quot;</bucket>
              <bucket>&quot;Prod155&quot;</bucket>
              <bucket>&quot;Prod086&quot;</bucket>
              <bucket>&quot;Prod023&quot;</bucket>
              <bucket>&quot;Prod203&quot;</bucket>
              <bucket>&quot;Prod008&quot;</bucket>
              <bucket>&quot;Prod136&quot;</bucket>
              <bucket>&quot;Prod031&quot;</bucket>
              <bucket>&quot;Prod015&quot;</bucket>
              <bucket>&quot;Prod080&quot;</bucket>
              <bucket>&quot;Prod285&quot;</bucket>
              <bucket>&quot;Prod138&quot;</bucket>
              <bucket>&quot;Prod034&quot;</bucket>
              <bucket>&quot;Prod202&quot;</bucket>
              <bucket>&quot;Prod235&quot;</bucket>
              <bucket>&quot;Prod036&quot;</bucket>
              <bucket>&quot;Prod191&quot;</bucket>
              <bucket>&quot;Prod050&quot;</bucket>
              <bucket>&quot;Prod002&quot;</bucket>
              <bucket>&quot;Prod078&quot;</bucket>
              <bucket>&quot;Prod190&quot;</bucket>
              <bucket>&quot;Prod192&quot;</bucket>
              <bucket>&quot;Prod063&quot;</bucket>
              <bucket>&quot;Prod032&quot;</bucket>
              <bucket>&quot;Prod335&quot;</bucket>
              <bucket>&quot;Prod130&quot;</bucket>
              <bucket>&quot;Prod079&quot;</bucket>
              <bucket>&quot;Prod094&quot;</bucket>
              <bucket>&quot;Prod173&quot;</bucket>
              <bucket>&quot;Prod007&quot;</bucket>
              <bucket>&quot;Prod200&quot;</bucket>
              <bucket>&quot;Prod259&quot;</bucket>
              <bucket>&quot;Prod006&quot;</bucket>
              <bucket>&quot;Prod014&quot;</bucket>
              <bucket>&quot;Prod112&quot;</bucket>
              <bucket>&quot;Prod075&quot;</bucket>
              <bucket>&quot;Prod248&quot;</bucket>
              <bucket>&quot;Prod182&quot;</bucket>
              <bucket>&quot;Prod074&quot;</bucket>
              <bucket>&quot;Prod211&quot;</bucket>
              <bucket>&quot;Prod066&quot;</bucket>
              <bucket>&quot;Prod277&quot;</bucket>
              <bucket>&quot;Prod189&quot;</bucket>
              <bucket>&quot;Prod109&quot;</bucket>
              <bucket>&quot;Prod029&quot;</bucket>
              <bucket>&quot;Prod217&quot;</bucket>
              <bucket>&quot;Prod175&quot;</bucket>
              <bucket>&quot;Prod194&quot;</bucket>
              <bucket>&quot;Prod069&quot;</bucket>
              <bucket>&quot;Prod282&quot;</bucket>
              <bucket>&quot;Prod037&quot;</bucket>
              <bucket>&quot;Prod108&quot;</bucket>
              <bucket>&quot;Prod076&quot;</bucket>
              <bucket>&quot;Prod082&quot;</bucket>
              <bucket>&quot;Prod240&quot;</bucket>
              <bucket>&quot;Prod222&quot;</bucket>
              <bucket>&quot;Prod256&quot;</bucket>
              <bucket>&quot;Prod230&quot;</bucket>
              <bucket>&quot;Prod151&quot;</bucket>
              <bucket>&quot;Prod247&quot;</bucket>
              <bucket>&quot;Prod154&quot;</bucket>
              <bucket>&quot;Prod181&quot;</bucket>
              <bucket>&quot;Prod115&quot;</bucket>
              <bucket>&quot;Prod111&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:product_code:nk]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:product_code:nk]' value='45' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='#000000' />
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='10' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='n#,##0,,.00M;-#,##0,,.00M' />
            <format attr='cell-w' value='90' />
            <format attr='cell-h' value='30' />
            <format attr='cell' value='30' />
            <format attr='cell-q' value='150' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:product_code:nk]' value='84' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:product_code:nk]' value='10' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:product_code:nk]' value='bold' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:product_code:nk]' value='#555555' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#187498' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:product_code:nk]</rows>
        <cols>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]</cols>
      </table>
      <simple-id uuid='{C1E3247F-C43F-403A-AC4E-25A9338032FF}' />
    </worksheet>
    <worksheet name='Year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1250030372935704577]' derivation='None' name='[none:Calculation_1250030372935704577:nk]' pivot='key' type='nominal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_45A73EBD6DB0478D9D83470D79FB25FB]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_73130876AAB448E6992C900D93D3F573]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action5_13576E434F364CE39D11DE018CAAE6B1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:Calculation_1250030372935704577:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1250030372935704577:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[yr:cy_date:ok]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' />
          </filter>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[yr:cy_date:ok]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:Calculation_1250030372935704577:nk]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[yr:cy_date:ok]' value='center' />
            <format attr='font-size' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[yr:cy_date:ok]' value='11' />
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[yr:cy_date:ok]' value='#333333' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:Calculation_1250030372935704577:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{56251A85-11E6-4145-BC5A-BC7485DAF895}' />
    </worksheet>
    <worksheet name='pie chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.1271acg07aiyzl13nj4sx0zxk5t2' />
          </datasources>
          <datasource-dependencies datasource='federated.1271acg07aiyzl13nj4sx0zxk5t2'>
            <column caption='Revenue' datatype='real' name='[Calculation_1250030372858150912]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency] == &apos;USD&apos; THEN [sales_amount]*80 ELSE [sales_amount] END' />
            </column>
            <column caption='Blank' datatype='string' name='[Calculation_1250030372935704577]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot; &quot;' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[pcto:sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1250030372858150912]' derivation='Sum' name='[sum:Calculation_1250030372858150912:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action13_58439BC1603D4742AF2DA3CD263D6D81]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1250030372935704577]' />
              <groupfilter function='level-members' level='[mn:cy_date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_73130876AAB448E6992C900D93D3F573]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]'>
            <groupfilter function='level-members' level='[markets_name]' user:ui-action-filter='[Action11_0EB6A1AFF13B4F66A05C09A0AF462CA3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Custmer Name)]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Markets Name)]</column>
            <column>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[Action (Blank,MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='399' />
            <format attr='cell-w' value='400' />
            <format attr='cell-h' value='400' />
            <format attr='cell' value='50' />
            <format attr='cell-q' value='250' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' value='' />
            <format attr='text-format' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[pcto:sum:Calculation_1250030372858150912:qk]' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]' value='bold' />
            <format attr='font-style' field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]' value='normal' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='font-style' value='normal' />
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]' />
              <size column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' />
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]' />
              <text column='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[pcto:sum:Calculation_1250030372858150912:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.86756908893585205' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]</field>
                  <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]</field>
                  <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[pcto:sum:Calculation_1250030372858150912:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;E-Commerce&quot;</value>
                <value>240343625.0</value>
                <value>0.24403521574670736</value>
              </tuple>
            </tuple-reference>
            <label-position x='-28' y='15' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]</field>
                  <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]</field>
                  <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[pcto:sum:Calculation_1250030372858150912:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brick &amp; Mortar&quot;</value>
                <value>744529088.0</value>
                <value>0.75596478425329261</value>
              </tuple>
            </tuple-reference>
            <label-position x='-46' y='21' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{52EBA567-5C9D-4AE0-9A08-991EF1B90434}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Profit-Analysis'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='72222' id='3' name='Profit Margin By Markets' w='23313' x='26000' y='26111' />
        <zone h='73000' id='4' name='Revenue By Market' w='25188' x='500' y='26000' />
        <zone h='11111' id='5' name='Revenue' show-title='false' w='13875' x='6125' y='11889' />
        <zone h='5222' id='6' name='Year' show-title='false' w='15625' x='35000' y='222' />
        <zone h='5333' id='7' name='Months' show-title='false' w='45500' x='20188' y='5556' />
        <zone h='42222' id='8' name='Profit-Trend' w='49500' x='49938' y='11889' />
        <zone h='7111' id='9' name='Profit-Trend' pane-specification-id='1' param='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]' type-v2='color' w='10500' x='87875' y='6444' />
        <zone h='42000' id='10' name='Customer Table' show-title='false' w='33313' x='67125' y='55000' />
        <zone h='44111' id='11' name='pie chart' show-title='false' w='16688' x='49750' y='55444' />
        <zone h='6556' id='12' name='pie chart' pane-specification-id='0' param='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]' type-v2='color' w='7688' x='57188' y='88000' />
        <zone h='10111' id='13' name='Profit' show-title='false' w='9313' x='33188' y='12556' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='18' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='47' h='5222' id='6' is-fixed='true' name='Year' show-title='false' w='15625' x='35000' y='222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='48' h='5333' id='7' is-fixed='true' name='Months' show-title='false' w='45500' x='20188' y='5556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='100' h='11111' id='5' is-fixed='true' name='Revenue' show-title='false' w='13875' x='6125' y='11889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42222' id='8' is-fixed='true' name='Profit-Trend' w='49500' x='49938' y='11889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7111' id='9' name='Profit-Trend' pane-specification-id='1' param='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]' type-v2='color' w='10500' x='87875' y='6444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='91' h='10111' id='13' is-fixed='true' name='Profit' show-title='false' w='9313' x='33188' y='12556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73000' id='4' is-fixed='true' name='Revenue By Market' w='25188' x='500' y='26000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72222' id='3' is-fixed='true' name='Profit Margin By Markets' w='23313' x='26000' y='26111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42000' id='10' is-fixed='true' name='Customer Table' show-title='false' w='33313' x='67125' y='55000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44111' id='11' is-fixed='true' name='pie chart' show-title='false' w='16688' x='49750' y='55444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6556' id='12' name='pie chart' pane-specification-id='0' param='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]' type-v2='color' w='7688' x='57188' y='88000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CAAE5818-DF7D-4B4F-A036-BA291FC295A4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Revenue-Analysis'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='4889' id='3' name='Year' show-title='false' w='17938' x='34813' y='1667' />
        <zone h='6444' id='4' name='Months' show-title='false' w='45875' x='20000' y='7222' />
        <zone h='9333' id='5' name='Revenue' show-title='false' w='13875' x='7375' y='13222' />
        <zone h='9333' id='6' name='Sales' show-title='false' w='11625' x='33875' y='13333' />
        <zone h='69667' id='7' name='Revenue By Market' w='25125' x='63' y='23111' />
        <zone h='71000' id='8' name='Sales Quantity By Market' w='24688' x='25250' y='23222' />
        <zone h='38778' id='9' name='Revenue By Year' show-title='false' w='49313' x='50188' y='17000' />
        <zone h='37556' id='10' name='Top 5 Customers' w='24688' x='50438' y='57000' />
        <zone h='37444' id='11' name='Top 5 Products' w='26250' x='75125' y='57111' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='16' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='44' h='4889' id='3' is-fixed='true' name='Year' show-title='false' w='17938' x='34813' y='1667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='58' h='6444' id='4' is-fixed='true' name='Months' show-title='false' w='45875' x='20000' y='7222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='84' h='9333' id='5' is-fixed='true' name='Revenue' show-title='false' w='13875' x='7375' y='13222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='84' h='9333' id='6' is-fixed='true' name='Sales' show-title='false' w='11625' x='33875' y='13333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38778' id='9' is-fixed='true' name='Revenue By Year' show-title='false' w='49313' x='50188' y='17000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='69667' id='7' is-fixed='true' name='Revenue By Market' w='25125' x='63' y='23111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='71000' id='8' is-fixed='true' name='Sales Quantity By Market' w='24688' x='25250' y='23222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37556' id='10' is-fixed='true' name='Top 5 Customers' w='24688' x='50438' y='57000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37444' id='11' is-fixed='true' name='Top 5 Products' w='26250' x='75125' y='57111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{37F4B181-1C93-4890-B880-B38B8A493ECE}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>984872713.0</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{29EEEC86-A53C-4798-A008-9A38EAE58B46}' />
    </window>
    <window class='worksheet' name='Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{12286766-4BED-4363-90EE-19E3BE8C28FF}' />
    </window>
    <window class='worksheet' name='Revenue By Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5495D0FC-F366-459E-97E0-A81BACF05892}' />
    </window>
    <window class='worksheet' name='Sales Quantity By Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{57F35988-59BB-40ED-B989-C2ED97008CDB}' />
    </window>
    <window class='worksheet' name='Top 5 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DDDE2E51-843B-4F2B-AC89-9E429F7EBC8E}' />
    </window>
    <window class='worksheet' name='Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D24C0E0B-D0FD-4788-9F0B-69C597DA5FC2}' />
    </window>
    <window class='worksheet' name='Revenue By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E25377AD-1489-4EC9-86FD-625E8AEB7DD6}' />
    </window>
    <window class='dashboard' name='Revenue-Analysis'>
      <viewpoints>
        <viewpoint name='Months' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Market' />
        <viewpoint name='Revenue By Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sales' />
        <viewpoint name='Sales Quantity By Market' />
        <viewpoint name='Top 5 Customers' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D49B31E8-D974-497C-B5B8-10FCA80608C4}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2D123599-0A38-4E5F-8E56-8E7B4EC87001}' />
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C8E03B24-713D-48FF-99AF-7381B0487B5E}' />
    </window>
    <window class='dashboard' maximized='true' name='Profit-Analysis'>
      <viewpoints>
        <viewpoint name='Customer Table' />
        <viewpoint name='Months' />
        <viewpoint name='Profit' />
        <viewpoint name='Profit Margin By Markets' />
        <viewpoint name='Profit-Trend'>
          <zoom type='entire-view' />
          <highlight field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Market' />
        <viewpoint name='Year' />
        <viewpoint name='pie chart'>
          <highlight field='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DA3DE822-52C6-432F-930A-95F07945F5CB}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9A97C7CD-A15C-43F8-9B04-C0DC6D6D6574}' />
    </window>
    <window class='worksheet' name='Profit Margin By Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{72122B4D-AD08-4D9D-BFE4-329FA6BA9609}' />
    </window>
    <window class='worksheet' name='Profit-Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E274C43-16C8-4CF0-8888-198828192727}' />
    </window>
    <window class='worksheet' name='Customer Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9608258-2D71-4714-B539-D1B91B87B96D}' />
    </window>
    <window class='worksheet' name='pie chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1271acg07aiyzl13nj4sx0zxk5t2].[sum:Calculation_1250030372858150912:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1271acg07aiyzl13nj4sx0zxk5t2].[none:customer_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8CECB801-7957-44EF-A664-1A89550E4D83}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer Table' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='86' name='Profit' width='124'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Margin By Markets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAdxUlEQVR4nO3dZ3cbZ5rm8X9VIQeCBHOmSIkSJSrQyg7jbne3PdPJ3XNmp+cj7JfYc/pz
      7J45Z3bP9s7OzO52styWlTMzxSRmMIAgCSIQRE5VtS8oy5LdtiUZoCzX83tFArhRDwu4UE9V
      3SxIuq7rCIJBya96AILwKr12AXjeDZamaS/1/C9Tp+v6c4/rVdbt5zp5XepeuwCoqlrSx73K
      upddlqZpL/Vivw7rZL/rXrsACEIpiQAIhiYCIBiaad+XqGuMPLhDWpOpaz3E4faGr314dGMZ
      3dNKtXP/hyp8/+3/u0orMOfz87O//09U2K3cv3OLs2dPcn90BZsaIZbR6O46gH99HWxV5FYe
      EHEe45d/+zYOk7TvwxW+3/Y9ALps4cOfv8/g/avIFZ3sBLfQtaMEt6NY037O/vyfkCM+CprG
      yvwiFzuaaOg6I978Qlns/z6AVmRmZg6bzUY2l8eqqDycfERe0zDZHLjtNjbXVtAtDiwmmcqa
      WubGhskUxQlrofSk/W6F0HUdTVPRNB3FZAJNQ9V1ZGnvE16WFdA1iqqKLMvIskyxWMRkMiFJ
      0pOfv0mhUMBsNr/w+F6mTtd1VFV9rnE9rVgsoigKkvRiW7fPjncrivJCdfu5Tl6Xun2fAkmS
      hKKYePLaKcqXN0OSjFn+/NaXWRmC8DzEYVDB0EQABEMTARAMTQRAMDQRAMHQRAAEQ9v3AGz7
      l7h37z6rW9Fnbn/Zf/IQhG9j3wOwND1M67HzDF75CzuJKMNDQ2xFk9z+/b/w75/cIxLZZtnn
      Y+LRAmoxx9TDEeZXNxHZEMph3wOgq0Vmp8Yp2pzouSy6lufSpcvU1jfSdfgwhaiPqbUkO74R
      NnYL5Asqn/75z+QQCRBKb98DIMkKHQcP8w+//gUTAwPUth3EYZVRzGZ0HSTAXVGBWZEIr0wT
      1tzUVbp4uX+SE4Svt++tEB09fbiqnJhNcPL0G8wHgpw6dZwDrbWMTSwgdbRw0FOBXHUKR3Uj
      ualp6k6cwrLfAxUMYd+b4b4t0QwnmuFKWScOgwqGJgIgGJoIgGBoIgCCoYkACIYmAiAYmgiA
      YGhfGYDf/+6fuXXnFv/+p0+Zf/AXpjYyX3rMxtQD+ue2XnypWpHf/+GPL14nCCX2lWduVF2i
      yushvBtGK2ZZnBln8t4Wpzvd5GrPEZ25To23Cp9vgsBkP+/9+G0mJ2bYjCa50GFjImwjHd3k
      nfPHmZxfo6gpHKw34QurHOo+RGo3wvCdT4iamilE1ulud+GLVeHIrNHRc5Rl3zLxgpWaYoht
      3UTv6R/QWefcz3UjGMBXbgFk2UyVtxYtm0KVoPPISRxygXwuR0HVyGWz6LpE+6FeDtaZWF7b
      ZDeVIxgKUizkaezswWPVmJuaIFHQcTtsuKrqoZAhk81jcXg4c+Y4sVAMh0klEAWLHmS3aCW/
      s0VW1dne2iSfS3Ps/I/Fm18oi68MgM0q41tawuqqxGZ3YTVJuNxuvPXNrM2MkiiA1ekitDqD
      P2Wj3gUaCt5KDxabA5tZxulyc+hYL0ohj83hoFBUcdot7MR2cbtcIJlwu+x0NNUQK5qolfO4
      mjooFvJIJiueCjcOdyVuh3U/14lgIKIXqAR1ohfo9a0TR4EEQxMBEAxNBEAwNBEAwdBEAARD
      EwEQDE0EQDC0fQlANh7i6pWr3Llzl+1YkonJ6Reo1pmYmBAXzRLKYl+uCpFLRSjYaultzDMx
      7WN7ZRI1vUNley/23DaL6xGOHD/FxuI42bxOU9dR9HiA1Y0I3SdOMzc7x/Hjx/djqILB7NsU
      aH1xmuHJVRobq5FkM8eOtDAyMsWdgQnOnOrg9s1B5uaW6O09SP+DIfK5PLnUFgOj8/s1RMGA
      9i0Atc0dnDjagX9tA8VsxqTIgIRZ1omEolgcDnRNJRoKYbWbGZvycfDgARRN268hCga0L1Mg
      p7eVw81FUtj44dsHiEU7kOxu/ua8B7f1KCuBMO//oIf/97txYnkzP/nB2yTDAVKawoW+CoqF
      lv0YpmBA36lmuK2NDeqamr52sySa4UQzXCnr9v+b4r9GQ1PTqx6CYDDiPIBgaCIAgqGJAAiG
      JgIgGJoIgGBoryQAhVyGXEEjm05S0P7KUVhdI5VKP/5ZJ5lMil4goSxeSQBWJ24zuRbhoz9d
      oqDqpBJxMrkCuv7450yCj/5yhUQ8TkHVGB0dexXDFAzg1ZwH0DWGrvyB0z/6kJ2lUaaCRbKx
      bQ53NrIaztPd2Uw2GWdpup9tWtndeomrzwnCc3g1+wCSzLG+06wvLRBY2aD71Cm8Np3ZJT+H
      e0/S0VyL3V3J4UPtZNNfviSjIJTKK9kCuKoaaKk4iFsbpqHzHLPD9zF5WvnJhRYGh4fIHzhA
      S3MTisVNU52Zgl30Agnl8Z3qBXoeohdI9AKVsk4cBhUMTQRAMDQRAMHQRAAEQxMBEAxNBEAw
      NBEAwdDKGIAU/+uf/yeRVJ7oxgL//Xd/pPgNFfdu30b94o26xvXrN0QznFAWZTwTXEQuJJlf
      CeJM+kkm4gQWJlArDhBenKCl0cWUP00xk6DaqWBrPMqab4aiXqC2rRdrZgN/YJvW3vPYrOIr
      koTyKOsUyNXUSSboI14wUWmTSca22U3n2Qysk4ht4246jEnNcqq3m7X1IBZHJW+eP83coynS
      6Sy6nGXmkY9AIFDOYQoGVt59AMmKPbuJ7mkGwO5wsLowS2Q3/dRjJPYaASQoZhgdGaWqtoZF
      nx+Pxy12UoSyKmMvkEY+ryKjoStmtEIes8VMOp1BUUxYzDKaZEJXi5hNCgVVR1fzFIo6docD
      NZ+lqINJMaPrKhaLBUmSRC8QoheolHVl3AeQsVie+vxWbAC4XK7PbwJQLABYZMBswvrk4XYs
      +zFMwdDEDEMwNBEAwdBEAARDEwEQDE0EQDA0EQDB0MoegNROkJWNMGohy9Z2pNyLE4QXUvYD
      7JsLs1xbivCb9y8y8HCB984eYWV9m46Dh7GRYd4XoLq+AbOWZScWx1PXgqmQwFFVy04kglXW
      UCUJxV5FldPyzQsUhBewD2eYZHo6G5hZ2uvnSScTJGOb/OV6FGcuyJkfXODm1UEqzTt0n/sB
      t65cwevIcfTtD7l95wEN5jRxTztvnjlT/qEKhrMv+wA1bd3s+Bcoahojw2M0tB5A1jOkCyqV
      LjuapiMpJtxuNxIaIFEsFigUVSRJpu/cRbwu8ekvlF7ZrwsUDayheurQIysEMnaq5TjbaQmn
      04FTTxHYCbO6rlNFAMXbQdfho1QQY349hsXmoNamU3XgKO7HLR6iF0j0ApWyruxTIG9z294P
      riPUPb5t7xad9aVZ1IKZd394itT2Cs2dR7FbZKCai+LrwoR98Aq7zCRaunpo6Xr8q7f31Q1F
      MCxxHkAwNBEAwdBEAARDEwEQDE0EQDC0kh0FUgtpFhdXsbq9tDfXPXNsOxoOYbNZKUhWPE4r
      Wi5FOK1RV+VmN7JF0VRBhVUjmZepdJpZW13B5qnHVNhleydFXXMb1RWOUg1VEJ4o2RYgv+tn
      fDFMPjTHzZElCtkky8urZAsqA7dv4F+c4sHEHGsbQYqZHZb8IQCmhge4du8Bsa1Fhmf8DN68
      TEK3o6sFhm7exVbr5ZOPPxYXxhLKoqRTILvDTfepN9leesj1Ty7hX53j09ujj+/VyWQLPLxz
      jUguS3Br5/EIrLRUmliPpIACq5E8x7paaKirRtc10skkJrNogxDKo+T7AOnoGuaKJqI7Merb
      ujlzvPPxPRLVtfW4bSZU7dmaQ729LE5NoWPCZSoSTefJ5/MABJensde0lXqYggCUcB/AZKvC
      nF9jbKHABz86TyLgZW49gLmzm45D3Xi9lZgUFzrduJyVHGzfuwBKU3sHDnslJ0/0Uqjy0nH4
      XcbHBqlq6OBAzzHaT55gbugB8ZyGx/ZivS+C8E3El+SVoE40w72+deIwqGBoIgCCoYkACIYm
      AiAYmgiAYGgiAIKhiQAIhvbSAZgducF/XLqFTp7Ln1x/odoblz8h99Tva5N3ebSe+IpH61y+
      fFn0Agll8XJngnWN5UACh66ym1PZDqzRf/cKuDrZWZug0mUhJlWRS0R5+3wf41NzaJKF072t
      PBiZY3XZz5lkmIGxGRIZlYOeLDP+MXyTOd4+f5Kp6Vl2sxLvnGrjzvAc8yvrvF/iP1wQ4CW3
      AIXEJr5AiEQ0yKI/jNVVSV/fEYL+TRLZIhf6eiiaKqmpMDH3cIRQpghqhsmxcQ6ffofmmgqy
      6TipTIHA+ioFVeNAz0lq7AUCWyHSuSIbq8tMPhyi5/x7NNe4S/13CwLwklsA/5KPv/nZrznk
      TvPp8OLjU/ISiiLvtQNIEoosI+sKjZ2drI8vUdHQSp0DxgbvsBPPkYoGSRVNOGwWZLMd/+wo
      Wh6qquJkixI2q5Xm9g5G7t8gksh945gE4WWIXqAS1IleoNe3ThwFEgxNBEAwNBEAwdBEAARD
      EwEQDE0EQDA0EQDB0MoagFwqxvBgP6ubEZYWF1Bf5kl0nZnZWdELJJRFGb8fQOfa5cuc/+BX
      2FD55GY/8eQudc2HqJDTTC346T31BqG1BXbjCZoPHSe5vUoymaSu/Qh6YoOVjRjHTvURjUTL
      N0zB0MoYgByJog2v04oEaKpGW1srtx88IB1co7GtgU+uD1IILfDT9y9wa3SW7Po4P3r/h9wf
      Haevo4pUxMetASvZ7UD5hikYWhmnQDbcSppwIksikcRksWE1m0DXka1OLvzNT/ngnRNYbHYs
      JgVd1zFb7XuP0TI8GJnjZN8xFPWlJk6C8FzK2gtUzCWZmJimtq0bPROjsbmJzWAEr0NmYm6Z
      riMnyMZCNDd62dgpoOfiNDXWsxVJIGWi7KoKVe5q8rkE7e3tSJIkeoEQvUClrBPNcCWoEwF4
      fevEYVDB0EQABEMTARAMTQRAMDQRAMHQRAAEQytLAHRd/9renW+6XxD2S1kC8OjOH3i0lf/K
      +6dv/4mZrWw5Fi0IL6SMvUAACf7Pf9zjh+cbGPcrFKJLOKqbsKlQCCxwxaeR3XpEfWsbyxtZ
      jjUqBBIqquJEj21x9vQB/jwQ5bgnSctbP6fJKWZsQmmV/R2laRq6rpNP7ZIxV/HOm+ewyRoD
      A8N09xxGVyz0nnoD8klW/GHeee89suF12hqc3BuP0lZvIVgw0eB4sbOlgvA8yhIAu9uLb3KA
      +dUYVY4CM8tBqhqbaXKo3OsfRnbV8Mu//5DZkSEqq7zIkkx1tZcTxw9x/8Z1Gg4ep/PgIVL5
      AsfrncieBiREAITSE71AJagTvUCvb52YVAuGJgIgGJoIgGBoIgCCoYkACIYmAiAYmgiAYGjf
      MgB5hofGAXg4PEThrzxiYnSY3Ddc2GF7ZYq1cOYr7tUZHh4WzXNCWXzLXiAVn2+VM2dPsurz
      4XJbcDcdI7o8TXN7Ew8fzrCwsERTRwcjj2Zw1rRQoe8QTet4a+vZ9K8g2SqpVteZntvFX+Xk
      VE8bExOPkBxe3jjcyMDQOCOPfJw+fbo0f7EgPOVbT4FS0U3u3bvH+nacqkobI6OT+NYCTPY/
      oP3EaeqqnIz33yScLPBochK/b4acrZ46t4lCUWN8dJB8Uaelqwd9108wmqSoaowNDjE+eJua
      7nM0VbtK8bcKwpd86wA4vY289dZbtNRV4Kw9SDHwAE9rLxVOGxvrAZLpHBWeStzeWt48fxpF
      MdHS0kJk9RF5ez0VThtIMsmdbWIplZ3AIprdS4XDgsPlIhhYI54SrdNCeXzLXiCNnZ0EVVUe
      dnd2cDhtXP7oL7z7y1/jkgoENrax2O1UV3kIbm5gsntwmjXMzipM5AgEQjjcLhxWMzvRKLYK
      Lx67wmYwgt3hpLLSxVZgA9nqpKHWKy6M9ZjoBSpdXUmb4fLpXaJpqK/xlK13UwRABKCUdSX9
      hxiLw0ODo5TPKAjlJc4DCIYmAiAYmgiAYGgiAIKhiQAIhrYvAdiN7aDqGtFIFNHRI3yXlPm6
      QHvuX7/CsdOnGF+M8pOLx4jEElTX1JPPplDzGRS7B0XLkc5ksbkqUbQcFruLdCqFSdLRJJDN
      DhzWfRmuYCD78o7KZ+JcvjHEP/zTb9gJLrO2tsrw9BrF8AKnLpxj+NYYlfIOjUf6mL83TLUl
      Sc/bH3L7ynUazGmi9jounHtLBEAouX2ZAlnsFZw83MSCL8D05BSOimryuTiYbbS3tYGaQ1bM
      tLR2oBSzaICma2iahiTJnHnrPRoqbfsxVMFg9uUjtfVAJ53HjjMxMk5TSxPxgk5HawuKWo0k
      KXR1dhBZnWB4oJ9DfeeplmMsPpqksbWVBge4zOKiWEJ5fGcujDU1NsSBo2/gtH59f4voBRK9
      QKWs+85Mqnv7zr7qIQgGJM4DCIYmAiAYmgiAYGjfmX2A75ORy/8XtVj8xsfpuv7CO8Cf1QEv
      XKtpGrL84p953+c6EYAymL57hWI+96qHITwHMQUSDK0kW4DQ0kNuTAdxSTn63v1bGissL1Cd
      4NrVaX704wulGMoL293yceXuGPFkhl/84n0uf3QJVbbx69/8hgqLxOTAHXybISbnt/jHD/oY
      mvFjtnk53mplYGaDn/3i50yNj/POm+dfyfiFb0f57W9/+9tv+yS7gSWSzha8xW2K7gbmh+8x
      u7CKy65z8/4oS3MzeGrrGLx7i6WlOXA2sDw1wMjoFA0Hmpkc9ZGJB3DX1nL/zgjxrXkmZ5eJ
      RTaJqi6Wxvqpbe/AJEnPPc/TNO25ThQpFic9R7qZuH+NXDaBVnuSXleEmVQlXQ0e6lvacef8
      bJu7KIZmOHDqHZbHB4lGsxw9Uk3/2CKZVAqntx6ve+8fosdvfISmfsPl8ITvhBJNgXS21ldJ
      qTJqcI6x5RiymiQS2UV21dLgkllaGEdzH6DJrRDPpNmNZ8hFlwnENAB2ImGKmkpoO8LO9iZt
      vReosxWIp/NEQiFK/nbK7vCnP35MIpPkX/7bf6X3x/9Ii9OEbDFjMZvJ5/cu9KjrOn+4Msqv
      3j+Ny25n4dEEBdnCmQvHmFvcxqonUMwV3Ll+s9QjFPZByQKQz2VJp9IolU14TDkclbXPtDU4
      KxsIrUywuLaFlksQCO5is1o/v9+mMDY2TipfQDaZ8bidONwelqcfshmJl2aYT7NV8csPf8pa
      /59ZipvZWpzF0XGU1cFP+XR0jRPtdv71f39EJjhFvrKHKpuCqqkU8nmKRZWmgydo8Xq4+M67
      xNYfYfFUlX6MQtmVpBfo829+lx4fmtO/dIivmEsyOfGI9XU/59//FXUOGb5wGE/Xn77py89T
      jgtjPf2t9ZIkUSgUMJnMSBLoj0fx2X2fPVaSpL379b37NV1DVXXM5r1x/Y//8p/FUaDXREl2
      gvfeEE+/mb/4O5isLnpPnaK37zRms+mvXjjry4e1v/w8pfbFsUuShCw/Dtw3PvazUcpIkpjz
      v4727TyAJElYLNZvfuD3QF1bF8XiX7tY/Bc83mq+8GX0Pttov+CHw7c58fZ9rfvOtEM/L9EO
      LdqhS1n3WgbgebwOp+FfdlmiFaJ0da9dAJ7X824pSlGn6/pzn3d4mqqqyLL8Um9k4IVf7P1c
      J69L3fc2APs5j3zZT+RXUfddn5Pvd933NgCC8Dy+F81wuq6xujDNxNzykwMkuVSM4YF+Vjcj
      JHeCDDx4gC8Q+sKFuXS2VhcYnZyjqO3dU8yleDg8yPzKJloxx9TYENMLq898SZ+uqyxMP2Ru
      OfB4eTrp3TD99++zGU2i6xr+5SVS+Wf3V9RClodDA2yE40+WHwos0z8wTCJTIBndYnBolNQX
      vlVQ14pMjQ6xvBF+8vdpaoHFhSVUdFI7Qfr7B0l8oa6QiTM8OEg4nv5s4BTzaRZ9a+johAI+
      BoYfksk/XaeTiGzSPzhKpqg9qUvtBPEHd8jEwzy4d487d+6yGU0+s7xsPMLAwBDxTOFJXTYV
      Y9kfBF0nHtngQf8gieyzy4tsrDA0NkVe1R+X6exu+9mMpkDNMHj/HvceDH9hfX42zpG/Ok4A
      NZ9hdHiEZxaHzubKPGNT86ia/v0IQCa8zPhqGn1jgtng3osdDkfpOdnH4PVPyUoW+s6eZvjW
      tWe+yVLPhLk9toanuMXI/CYAO+Ew7UeOM333OhuREHWdx1gduUf0s5UMBBcesp51sD03SGB3
      74TXdjhG39kz3PjLJUIbK3x86ROi6WcPhY7fvoK99Qh3rn/K3rMV2U1DT6uLa/cGuXr9Pgfb
      vFy7PfBM3eLQTbKV7cwM3iSe23sTrC5McenjaxS1Ip9cu8fJ3gN8fOnKMwG/f/0aDZ1d3Lh6
      HZ29D4rpiUGu3RoEMly/PcmRRivXHkx+vk7UPJ/e6Keny8un1wfQATWX4P6tK4zO+rFX1HDx
      rTfJRdbRlGePuFy9co3uw21cuXILHdCKOUYHbnNv+BFqIcXVW2OcOX0Shc/XpZ6Pc71/huaK
      IndHZgEoJCPcvHKJR/4dcpE1tgpu3rp4BqfF9Ow4r/dztKuGT6/1fz7O21cZmVkDYGZsgLGH
      EySfyo2eDnFnfB1XLsDoYvD1DoBWzDM1Psbq8hruunqam6rZ2IoC0NTSwsO7V2noeYMqh5Wh
      W5+guRsws/dGmJsaZWXJh7Wqnrr6OsKhEAA1jS2sTDzA0d5Dc10z0aUxitVtVJlk1FyKsdGH
      rPmDVDfUUFflIhRLAhJtbc3cvfwR3affpLa5k67mmifjTMe2GRufIRBK01BfgUMvsvetZ2aa
      au3cuD/FG0fbyckOqiqrSSdjABTTMYaGJljbjNPYWEml3cJuJg/AgSPHqfXYQZJxW3TGZ1ZJ
      J2NoOsS215mcWSKayFNd7cVUSJIHJFnheN8ZbAqADaeS4Eb/OE1NDQCs+2ZZWFpDN9lwe5rI
      xTcAUGwV9J3o4fH5QbK7G0SkGpo8e+d1ttd9zCz6yRR0Kjx16JkwKiCbbZw8dRKLDIX0NpFo
      gttXLjG1sreufXMT+JZWMLkq8VbXE98JAmBx19DX07W3MHsNtaY4//av/0Youfdhs748y4LP
      j2a24qpsIpd4dpyKBJlYgPW0g/YaJzzzmi9h8zZQX19HKBR6vQMgKWa6e47S0tZMMhxicytK
      Q70Lv3+L/msf4+46y9t93SRSWc69+3fYkxvEiwASnd3HaOloJ7cbIhwKU11dybp/g7mRm8Tt
      7bz/dh/B+QHmE25+8eO3kCUJ2WLn6LGjtDTVEt2OEo4lqXLKBDZDXPnT7zl48QNOH2750nkt
      W0U1R3u6aKi2sx1KkJFM6Lthwrtx/vjHq/zo5x/S1liHRUsT293B7vQAey/oiRNHaKl3E9za
      ZTdbwKZnCYZ3n1oJMm+99wHHOhvweOuQgYrqBg53tVHpMhPd2aFodpINB9lN5z+vy+8Qx8v7
      75zB51sGoKG1iwPtzUjFHMn4FlZ3A1vr6xS0ZyeOE0PDnDhz9snfWd3QSld7IzazTCIeQrJ5
      iW1tkH5qymKyV1NZ6eLCG0fY2gwD0Np5hLb2VoqpXWLRbdyVNQT8gae2D6DqEsf6ztLhtRF7
      PLVqaOniQFsTcjFHKr6FxfXlcebzGk5TnqVVP4HN0DOveXZnm1AoTHVNZWnaoV8VSZJQFBMW
      ZxWmXJiMvYneA9Wsr4Vwu61EQ9tsR+I4bTqPpudoO9pHk9f9pE6xOPGYsoRyNvqOtrPh38Lp
      crAbDbO5GcbpqSSTiBJY38Tb2IRVkTGZFFzV9WRDq1jrujhQ52ArGMdpNxEKbhKOZ9FSIWJZ
      nWQiQX1dPWaTgklRqG9pYW12iu6TZ7GoKZJ5HUktEAxuktVtHD/UxIxvi3PnTmM1750gM5kU
      vE2thHwz1B88To1dJ5ooEPYvoJkt7CYLWNUkc2sR3nr7AhaTjCTLKIpCU1MDCzPznDh9Di21
      Q0G2sDA5gdVupWiu4mCjg/lAnItn+7CaFWRFQTGZaKp2Mb0U5OLFs0Q2A1itErOLARQth62i
      CsVk52BH85MtgiwrKIpMS2MN0zPLnLlwnlR0G0wm5mcXMZt0FGct3c0VzPiTvH3hBCZZQlEU
      FLONGqfEajjP2b4egusbWEwF5tdjkNvFU9PA6twU1vqDHG6t3WtVeXqci5tcvHiOyFYAq+Xz
      cXoaOzl25CANdXW0trVilh+/5lYXFUqGcNFJX0+bOAokGNtrPQUShG9LBEAwNBEAwdBEAARD
      EwEQDE0EQDC0/w+JhrMsBm2yFgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit-Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit-Trend' width='192'>
      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
    </thumbnail>
    <thumbnail height='86' name='Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue By Market' width='192'>
      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
      5v8DRBDB6UzVJJoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Revenue By Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue-Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='86' name='Sales' width='184'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Quantity By Market' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 Customers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 Products' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='pie chart' width='192'>
      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
      /wcdy7tWHH2eLQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
